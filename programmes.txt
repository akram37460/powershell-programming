#1. stop the spooler service if it is running

$spoolerService = Get-Service -Name Spooler

if($spoolerService.Status -eq 'Running') {
    Write-Host "Spooler Service is stopped"
    $spoolerService = Stop-Service -Name Spooler
} else {
    Write-Host "Spooler Service has not runing"
}


#2. wap to restart service if spooler service is running  

$spoolerService = Get-Service -Name Spooler

if($spoolerService.Status -eq 'Stopped') {
    Write-Host "Spooler Service is started"
    $spoolerService = Restart-Service -Name Spooler
} else {
    Write-Host "Spooler Service has runing"
}



#3. check the notepad process is runing or not  

$notepadProcess = Get-Process -Name Notepad -Debug
if($notepadProcess.Status) {
    Write-host = "Note pad process is runing" -BackgroundColor DarkGreen
}
else {
    Write-host = "Note pad process is not runing" -BackgroundColor red
}


#4. Store 3 services in array. restart the services if it is running otherwise start 

$sevicesAray = Get-Service -Name Spooler, ALG, Appinfo
Write-Host $sevicesAray
ForEach ($service in $sevicesAray ) {
    if($service.status -eq "Running") {
        Restart-Service -Name $service.Name
        Write-Host $service.Name, "is Restarted"
    } else {
        Start-Service -Name $service.Name
        Write-Host $service.Name, "is Stared"
    }

}


#5. WAP to create 3 files in given folder and make sure given folder is available
$folder = "D:\PowerShell-WorkFolder"
$folderExistOrNot = Test-Path -Path $folder

$fileNames = "first.txt", "second.txt", "third.txt"

if( $folderExistOrNot ) {
   foreach( $fileName in $fileNames ) {
    $fullPath = Join-Path -Path $folder -ChildPath $fileName
    Write-Host "File Created on the locaation",$fullPath
    New-Item $fullPath
   }
} else {
    Write-Host "Folder path is not valid"
}

#Write A Program to fetch all 3 days older file using PowerShell.

$Path="D:\WorkSpace"
$date=(Get-Date).AddDays(-3)
$ItemDetails=Get-ChildItem $path
$lodname=get-date -Format "yyyyMMddHHmmss" 
$Result=$ItemDetails|Where-Object {$_.CreationTime -gt $date }|Select-Object -Property name,CreationTime,@{n="Path";e={$_.Fullname}}
Remove-Item -Path "D:\WorkSpace\olderfile.csv" -Verbose
$Result|Export-Csv -Path "D:\WorkSpace\olderfile$($lodname).csv" -NoTypeInformation  -Verbose


#6.Write PowerShell script that retrieves information about the C driveâ€™s memory usage, free space, in percentage.

$AllDiskDetails = Get-Volume 
$Cdrivedetails = $AllDiskDetails | Where-Object { $_.DriveLetter -eq "C" }
$totalSize = $Cdrivedetails.Size
$SizeRemaining = $Cdrivedetails.SizeRemaining

$FreeSpace = ( $SizeRemaining / $totalSize ) * 100



# To calculate the total free disk space for drives C and D in PowerShell.

$AllDiskDetails = Get-Volume 
$Cdrivedetails = $AllDiskDetails | Where-Object { $_.DriveLetter -eq "C" }
$totalSize = $Cdrivedetails.Size
$SizeRemaining = $Cdrivedetails.SizeRemaining

$CFreeSpace = ( $SizeRemaining / $totalSize ) * 100

$AllDiskDetails = Get-Volume 
$Ddrivedetails = $AllDiskDetails | Where-Object { $_.DriveLetter -eq "D" }
$totalSize = $Ddrivedetails.Size
$SizeRemaining = $Cdrivedetails.SizeRemaining

$DFreeSpace = ( $SizeRemaining / $totalSize ) * 100


*****Second Way and we can say short way*****
$AllDiskDetails = Get-Volume 
foreach($AllDiskDetail in $AllDiskDetails ) {

    if( $AllDiskDetail.DriveLetter -eq "C" -or $AllDiskDetail.DriveLetter -eq "D") {

        $totalSize = $AllDiskDetail.Size
        $SizeRemaining = $AllDiskDetail.SizeRemaining
        $DFreeSpace = ( $SizeRemaining / $totalSize ) * 100
        Write-Host $AllDiskDetail.DriveLetter, "=", $DFreeSpace
    }
}